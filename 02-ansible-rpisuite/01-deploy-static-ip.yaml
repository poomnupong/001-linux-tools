---
# initialize raspberry pi imaged with our custom ubuntu 19.10
# (see ./cloud-init/sample-user-data)
# apply only to polarcub-all group which lists our pi that came up with dhcp addresses, read more on inventory.yaml
- hosts: polarcub-all
  become: yes

  vars_files:
    - vars.yaml
  
  tasks:
    # as the script go through the list of static ip, we get mac address mapping out of vars.yaml
    - name: get node mac address for the node we want to configure
      set_fact: 
        NODE_MAC_ADDRESS: "{{ hostvars[inventory_hostname].ansible_default_ipv4.macaddress }}"
    
    # then populate other network parameters
    - name: set variable based on MAC address
      set_fact:
        NODE_HOSTNAME: "{{ mac_address_mapping[NODE_MAC_ADDRESS].name }}"
        NODE_IP_ADDR: "{{ mac_address_mapping[NODE_MAC_ADDRESS].ip }}"
        NODE_DEFAULTGW: "{{ default_gateway }}"
        NODE_NAMESERVERS: "{{ dns_nameservers[0] }},{{ dns_nameservers[1] }}"

    # set hostname in host file
    - name: add line to host file
      lineinfile:
        state: present
        path: /etc/hosts
        insertafter: '^127\.0\.0\.1 localhost'
        regexp: "127.0.0.1 {{ NODE_HOSTNAME }}"
        line: "127.0.0.1 {{ NODE_HOSTNAME }}"

    # actually set the hostname
    - name: set hostname
      hostname:
        name: "{{ NODE_HOSTNAME }}"
        use: debian
    
    # make hostname survive reboots
    # deploy static network setting for eth0
    # demonstrate multi-plate
    - name: prepare and update network configuration artifacts
      template:
        src: "templates/{{ item.template }}"
        dest: "{{ item.dest }}"
        force: yes
        mode: 0644
      with_items:
        - { template: hostname.j2, dest: /etc/hostname }
        - { template: netplan_51-netconfig.j2, dest: /etc/netplan/51-netconfig.yaml }

    # disable default network config from cloud-init
    - name: disable default cloud-init network configuration
      lineinfile:
        state: present
        create: yes
        path: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
        line: "network: {config: disabled}"
    
    # clear stock network config
    - name: remove old netconfig file
      file:
        path: /etc/netplan/50-cloud-init.yaml
        state: absent

    # we'll use only ssh key auth
    - name: disable password authentication
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
        state: present
        backup: yes
      notify:
        - restart ssh

    # no root login - explicitly define
    - name: disable root login
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
        backup: yes
      notify:
        - restart ssh

    # remove default user, if present
    - name: remove default user
      user:
        name: ubuntu
        state: absent
        remove: yes

    # get the time zone right
    - name: set time zone
      timezone:
        name: America/Los_Angeles
    
    # and just reboot them
    - name: reboot the machine
      shell:
        cmd: "sleep 10; /usr/sbin/reboot"
      args:
        removes: /var/run/reboot-required
      async: 300
      poll: 0
      ignore_errors: true

  handlers:
    - name: restart ssh
      service:
        name: sshd
        state: restarted